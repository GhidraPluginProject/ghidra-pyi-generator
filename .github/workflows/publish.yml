name: Publish Tagged Commit to PyPI

on:
  push:
    tags:
      - 'v*.*.*'


jobs:
  build-n-publish:
    name: Build and publish Python Package
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: er28-0652/setup-ghidra@master
        with:
          version: "9.2.2"

      - name: Prepare Jython Environment
        run: >-
          # Create a virtualenv for Ghidra packages.
          # It is important to use Python2.7 for this venv!
          # If you want, you can skip this step and use your default Python installation.
          mkvirtualenv -p python2.7 ghidra

          # Create Jython's site-pacakges directory.
          jython_site_packages=~/.local/lib/jython2.7/site-packages
          mkdir -p $jython_site_packages

          # Create a PTH file to point Jython to Python's site-packages directories.
          # Again, this has to be Python2.7.

          # Outside a virtualenv, use
          python2.7 -c "import site; print(site.getusersitepackages()); print(site.getsitepackages()[-1])" > $jython_site_packages/python.pth

          # If using virtualenv, use the following instead
          python2.7 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())" > $jython_site_packages/python.pth


          # Use pip to install packages for Ghidra
          pip install attrs typing

      - name: Build Package
        run: >-
          $GHIDRA_ROOT/support/analyzeHeadless /tmp tmp -scriptPath $(pwd) -preScript generate_ghidra_pyi.py ./

      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/

# TODO: Setup publishing to PyPI by creating package and token and adding to GitHub secrets
#      - name: Publish distribution ðŸ“¦ to PyPI
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}


      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
